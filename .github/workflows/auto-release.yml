<<<<<<< HEAD
name: Automatic Release
=======
name: Auto JSR
>>>>>>> 26b4a61553acfbb5642113e9be31fa03db525f98

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'package.json'
      - 'src/**'
      - 'styles/**'

jobs:
  determine-version:
    runs-on: ubuntu-latest
    outputs:
<<<<<<< HEAD
      tag: ${{ steps.generate-release-info.outputs.tag }}
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Checkout code
=======
      next_version: ${{ steps.bump.outputs.new_version }}
    steps:
      - name: Checkout
>>>>>>> 26b4a61553acfbb5642113e9be31fa03db525f98
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

<<<<<<< HEAD
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate release tag and notes
        id: generate-release-info
        run: |
          # Generate random tag
          DATE=$(date +'%Y.%m.%d')
          RANDOM_NUM=$(( RANDOM % 1000 ))
          TAG="v${DATE}-${RANDOM_NUM}"
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          
          # Create temporary release notes file
          echo "# JSR Release" > release-notes.md
          echo "" >> release-notes.md
          echo "## Improvements" >> release-notes.md
          echo "- Improved performance" >> release-notes.md
          echo "- Enhanced user interface" >> release-notes.md
          echo "- Updated translations" >> release-notes.md
          echo "" >> release-notes.md
          echo "## Bug Fixes" >> release-notes.md
          echo "- Fixed various issues" >> release-notes.md
          echo "- Improved stability" >> release-notes.md

      - name: Create release
=======
      - name: Determine Next Version
        id: bump
        uses: mathieudutour/github-tag-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    runs-on: ubuntu-latest
    needs: determine-version
    permissions:
      contents: write
    outputs:
      version: ${{ steps.create-release.outputs.version }}
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create Release
>>>>>>> 26b4a61553acfbb5642113e9be31fa03db525f98
        id: create-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
<<<<<<< HEAD
          gh release create ${{ steps.generate-release-info.outputs.tag }} \
            --title "JSR Release ${{ steps.generate-release-info.outputs.tag }}" \
            --notes-file release-notes.md \
            --repo ${{ github.repository }}
          echo "upload_url=${{ github.server_url }}/${{ github.repository }}/releases/${{ steps.generate-release-info.outputs.tag }}/assets/upload" >> $GITHUB_OUTPUT
=======
          VERSION=v${{ needs.determine-version.outputs.next_version }}
          gh release create $VERSION \
            --title "Release $VERSION" \
            --generate-notes \
            --repo ${{ github.repository }}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "upload_url=${{ github.server_url }}/${{ github.repository }}/releases/$VERSION/assets/upload" >> $GITHUB_OUTPUT
>>>>>>> 26b4a61553acfbb5642113e9be31fa03db525f98

  build-and-upload:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
<<<<<<< HEAD
      - name: Checkout code
=======
      - name: Checkout
>>>>>>> 26b4a61553acfbb5642113e9be31fa03db525f98
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get version from package.json
        id: get-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: npm run build:win

      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: npm run build:mac

      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux


      - name: Upload Windows artifacts
=======
      - name: Upload Artifact (Windows)
>>>>>>> 26b4a61553acfbb5642113e9be31fa03db525f98
        if: matrix.os == 'windows-latest'
        run: |
<<<<<<< HEAD
          gh release upload ${{ needs.create-release.outputs.tag }} \
            ./dist/JSR-Setup-${{ steps.get-version.outputs.version }}.exe \
            --repo ${{ github.repository }}

      - name: Upload macOS artifacts
=======
          gh release upload ${{ needs.create-release.outputs.version }} \
            ./dist/JSR-Setup-${{ needs.create-release.outputs.version }}.exe \
            --repo ${{ github.repository }}

      - name: Upload Artifact (macOS)
>>>>>>> 26b4a61553acfbb5642113e9be31fa03db525f98
        if: matrix.os == 'macos-latest'
        run: |
<<<<<<< HEAD
          gh release upload ${{ needs.create-release.outputs.tag }} \
            ./dist/JSR-${{ steps.get-version.outputs.version }}.dmg \
            --repo ${{ github.repository }}

      - name: Upload Linux artifacts
=======
          gh release upload ${{ needs.create-release.outputs.version }} \
            ./dist/JSR-${{ needs.create-release.outputs.version }}.dmg \
            --repo ${{ github.repository }}

      - name: Upload Artifact (Linux)
>>>>>>> 26b4a61553acfbb5642113e9be31fa03db525f98
        if: matrix.os == 'ubuntu-latest'
        run: |
<<<<<<< HEAD
          gh release upload ${{ needs.create-release.outputs.tag }} \
            ./dist/JSR-${{ steps.get-version.outputs.version }}.AppImage \
            ./dist/jsr_${{ steps.get-version.outputs.version }}_amd64.deb \
            --repo ${{ github.repository }}
=======
          gh release upload ${{ needs.create-release.outputs.version }} \
            ./dist/JSR-${{ needs.create-release.outputs.version }}.AppImage \
            --repo ${{ github.repository }}
>>>>>>> 26b4a61553acfbb5642113e9be31fa03db525f98
